// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Types from "./Types.res.mjs";
import * as React from "react";
import * as FormField from "./Components/FormField.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as AuthSpecPreview from "./Components/AuthSpecPreview.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function StudioSpecEditor(props) {
  var match = React.useState(function () {
        return Types.emptySpec;
      });
  var setSpec = match[1];
  var spec = match[0];
  var match$1 = React.useState(function () {
        return "custom";
      });
  var setSelectedProvider = match$1[1];
  var providerTemplates = [
    [
      "custom",
      "Custom Provider",
      Types.emptySpec
    ],
    [
      "google",
      "Google OAuth",
      {
        name: "Google OAuth",
        clientId: Types.emptySpec.clientId,
        clientSecret: Types.emptySpec.clientSecret,
        authorizeUrl: "https://accounts.google.com/o/oauth2/v2/auth",
        tokenUrl: "https://oauth2.googleapis.com/token",
        redirectUri: Types.emptySpec.redirectUri,
        scopes: [
          "openid",
          "email",
          "profile"
        ]
      }
    ],
    [
      "github",
      "GitHub OAuth",
      {
        name: "GitHub OAuth",
        clientId: Types.emptySpec.clientId,
        clientSecret: Types.emptySpec.clientSecret,
        authorizeUrl: "https://github.com/login/oauth/authorize",
        tokenUrl: "https://github.com/login/oauth/access_token",
        redirectUri: Types.emptySpec.redirectUri,
        scopes: [
          "read:user",
          "user:email"
        ]
      }
    ],
    [
      "ory-hydra",
      "Ory Hydra",
      {
        name: "Ory Hydra OAuth",
        clientId: Types.emptySpec.clientId,
        clientSecret: Types.emptySpec.clientSecret,
        authorizeUrl: "http://127.0.0.1:4444/oauth2/auth",
        tokenUrl: "http://127.0.0.1:4444/oauth2/token",
        redirectUri: Types.emptySpec.redirectUri,
        scopes: [
          "openid",
          "offline_access",
          "profile",
          "email"
        ]
      }
    ]
  ];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("header", {
                      children: JsxRuntime.jsx("div", {
                            children: JsxRuntime.jsxs("div", {
                                  children: [
                                    JsxRuntime.jsxs("div", {
                                          children: [
                                            JsxRuntime.jsx("button", {
                                                  children: "‚Üê Back",
                                                  className: "text-gray-500 hover:text-gray-700 mr-4"
                                                }),
                                            JsxRuntime.jsx("h1", {
                                                  children: "OAuth Spec Editor",
                                                  className: "text-xl font-semibold text-gray-900"
                                                })
                                          ],
                                          className: "flex items-center"
                                        }),
                                    JsxRuntime.jsxs("div", {
                                          children: [
                                            JsxRuntime.jsx("button", {
                                                  children: "Preview",
                                                  className: "px-3 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50"
                                                }),
                                            JsxRuntime.jsx("button", {
                                                  children: "Generate SDK",
                                                  className: "px-3 py-2 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700"
                                                })
                                          ],
                                          className: "flex items-center space-x-3"
                                        })
                                  ],
                                  className: "flex justify-between items-center py-4"
                                }),
                            className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
                          }),
                      className: "bg-white shadow-sm border-b"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsxs("div", {
                            children: [
                              JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h2", {
                                            children: "OAuth Configuration",
                                            className: "text-lg font-medium text-gray-900 mb-6"
                                          }),
                                      JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("label", {
                                                    children: "Provider Template",
                                                    className: "block text-sm font-medium text-gray-700 mb-2"
                                                  }),
                                              JsxRuntime.jsx("select", {
                                                    children: providerTemplates.map(function (param) {
                                                          var id = param[0];
                                                          return JsxRuntime.jsx("option", {
                                                                      children: param[1],
                                                                      value: id
                                                                    }, id);
                                                        }),
                                                    className: "w-full border border-gray-300 rounded-md px-3 py-2",
                                                    value: match$1[0],
                                                    onChange: (function (e) {
                                                        var value = e.target.value;
                                                        setSelectedProvider(function (param) {
                                                              return value;
                                                            });
                                                        var template = Core__Option.getOr(Core__Option.map(providerTemplates.find(function (param) {
                                                                      return param[0] === value;
                                                                    }), (function (param) {
                                                                    return param[2];
                                                                  })), Types.emptySpec);
                                                        setSpec(function (param) {
                                                              return template;
                                                            });
                                                      })
                                                  })
                                            ],
                                            className: "mb-6"
                                          }),
                                      JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx(FormField.make, {
                                                    label: "Application Name",
                                                    value: spec.name,
                                                    onChange: (function (value) {
                                                        setSpec(function (s) {
                                                              return {
                                                                      name: value,
                                                                      clientId: s.clientId,
                                                                      clientSecret: s.clientSecret,
                                                                      authorizeUrl: s.authorizeUrl,
                                                                      tokenUrl: s.tokenUrl,
                                                                      redirectUri: s.redirectUri,
                                                                      scopes: s.scopes
                                                                    };
                                                            });
                                                      }),
                                                    placeholder: "My OAuth App"
                                                  }),
                                              JsxRuntime.jsx(FormField.make, {
                                                    label: "Client ID",
                                                    value: spec.clientId,
                                                    onChange: (function (value) {
                                                        setSpec(function (s) {
                                                              return {
                                                                      name: s.name,
                                                                      clientId: value,
                                                                      clientSecret: s.clientSecret,
                                                                      authorizeUrl: s.authorizeUrl,
                                                                      tokenUrl: s.tokenUrl,
                                                                      redirectUri: s.redirectUri,
                                                                      scopes: s.scopes
                                                                    };
                                                            });
                                                      }),
                                                    placeholder: "your-client-id"
                                                  }),
                                              JsxRuntime.jsx(FormField.make, {
                                                    label: "Authorization URL",
                                                    value: spec.authorizeUrl,
                                                    onChange: (function (value) {
                                                        setSpec(function (s) {
                                                              return {
                                                                      name: s.name,
                                                                      clientId: s.clientId,
                                                                      clientSecret: s.clientSecret,
                                                                      authorizeUrl: value,
                                                                      tokenUrl: s.tokenUrl,
                                                                      redirectUri: s.redirectUri,
                                                                      scopes: s.scopes
                                                                    };
                                                            });
                                                      }),
                                                    placeholder: "https://provider.com/oauth2/authorize"
                                                  }),
                                              JsxRuntime.jsx(FormField.make, {
                                                    label: "Token URL",
                                                    value: spec.tokenUrl,
                                                    onChange: (function (value) {
                                                        setSpec(function (s) {
                                                              return {
                                                                      name: s.name,
                                                                      clientId: s.clientId,
                                                                      clientSecret: s.clientSecret,
                                                                      authorizeUrl: s.authorizeUrl,
                                                                      tokenUrl: value,
                                                                      redirectUri: s.redirectUri,
                                                                      scopes: s.scopes
                                                                    };
                                                            });
                                                      }),
                                                    placeholder: "https://provider.com/oauth2/token"
                                                  }),
                                              JsxRuntime.jsx(FormField.make, {
                                                    label: "Redirect URI",
                                                    value: spec.redirectUri,
                                                    onChange: (function (value) {
                                                        setSpec(function (s) {
                                                              return {
                                                                      name: s.name,
                                                                      clientId: s.clientId,
                                                                      clientSecret: s.clientSecret,
                                                                      authorizeUrl: s.authorizeUrl,
                                                                      tokenUrl: s.tokenUrl,
                                                                      redirectUri: value,
                                                                      scopes: s.scopes
                                                                    };
                                                            });
                                                      }),
                                                    placeholder: "http://localhost:3000/callback"
                                                  }),
                                              JsxRuntime.jsxs("div", {
                                                    children: [
                                                      JsxRuntime.jsx("label", {
                                                            children: "Scopes",
                                                            className: "block text-sm font-medium text-gray-700 mb-2"
                                                          }),
                                                      JsxRuntime.jsx("input", {
                                                            className: "w-full border border-gray-300 rounded-md px-3 py-2",
                                                            placeholder: "openid,email,profile (comma-separated)",
                                                            value: spec.scopes.join(","),
                                                            onChange: (function (e) {
                                                                var value = e.target.value;
                                                                var scopes = value.split(",").map(function (prim) {
                                                                      return prim.trim();
                                                                    });
                                                                setSpec(function (s) {
                                                                      return {
                                                                              name: s.name,
                                                                              clientId: s.clientId,
                                                                              clientSecret: s.clientSecret,
                                                                              authorizeUrl: s.authorizeUrl,
                                                                              tokenUrl: s.tokenUrl,
                                                                              redirectUri: s.redirectUri,
                                                                              scopes: scopes
                                                                            };
                                                                    });
                                                              })
                                                          })
                                                    ]
                                                  })
                                            ],
                                            className: "space-y-4"
                                          })
                                    ],
                                    className: "bg-white rounded-lg shadow p-6"
                                  }),
                              JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h2", {
                                            children: "Generated .auth File",
                                            className: "text-lg font-medium text-gray-900 mb-6"
                                          }),
                                      JsxRuntime.jsx("div", {
                                            children: JsxRuntime.jsx(AuthSpecPreview.make, {
                                                  spec: spec
                                                }),
                                            className: "bg-gray-50 rounded-md p-4 font-mono text-sm"
                                          })
                                    ],
                                    className: "bg-white rounded-lg shadow p-6"
                                  })
                            ],
                            className: "grid grid-cols-1 lg:grid-cols-2 gap-8"
                          }),
                      className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8"
                    })
              ],
              className: "min-h-screen bg-gray-50"
            });
}

var make = StudioSpecEditor;

export {
  make ,
}
/* react Not a pure module */
